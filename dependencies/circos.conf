
<<include ideogram.conf>>

chromosomes_units = 100
<<include ticks.conf>>

<image>
dir   = .
file  = circos_v9.png
png   = yes
svg   = yes
radius         = 1500p
auto_alpha_colors = yes
auto_alpha_steps  = 256
angle_offset* = -89 #for use with default spacing at top
24bit = yes

#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
# specify a color or image
# to make the background transparent, use "transparent"
# comment out with a leading hash symbol to default to a white background
# or specify the color of your choice
background     = white

# be sure to set the color of the lobe labels in the ideogram.label.conf 
# file, too, depending on the background being used
#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

</image>

### single genomes

karyotype = data/segments.txt
#karyotype = test.txt

<<include segment.order.conf>>

chromosomes_reverse = /.*-l/

hm_r      = 0.95
hm_w      = 0.030
hm_pad    = 0.000

hm_colors  = winter,summer,spring,autumn,copper

# load colors here
<colors>
<<include colors.connectogram.conf>>
<<include colors.connectogram.list.conf>>

#<<include etc/colors.conf>>
<<include color.brain.conf>>

#hm_colors = greys-4-seq,greys-4-seq,greys-4-seq,greys-4-seq,greys-4-seq
#hm_colors = reds-9-seq,oranges-9-seq,greens-9-seq,blues-9-seq,browns-9-seq
#hm_colors  = winter,summer,spring,autumn,copper

</colors>

<plots>



<<include atl_cam.conf>>
<<include atl_brod.conf>>
<<include atl_econ.conf>>
#<<include atl_kle.conf>>
<<include atl_fle.conf>>
#<<additional atlX.conf>>

<<include vol_white.conf>>
<<include area_white.conf>>
<<include thickness_white.conf>>
<<include curv_white.conf>>
<<include func_sbars.conf>>
<<include fmri_comms.conf>>
<<include dti_deg_hm.conf>>
<<include dti_pc_hm.conf>>


#<<include dti_sbars.conf>>
#<<include dti_comms.conf>>
#<<include strengths_white.conf>>

#<<include heatmap.conf>>
#<<include heatmap.conf>>
#<<include heatmap.conf>>
#<<include heatmap.conf>>

<plot>
type       = text
file       = data/structure.label.txt

#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
#color of the region label text
#change to black for our traditional connectogram
color      = black
#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

label_font = default
label_size = 20
r0         = 1r
r1         = 1.5r
rpadding   = 10p
</plot>

</plots>


<links>

<link>

file   = data/links.txt
radius = 0.45r #0.7r #0.825 # eval(sprintf("%fr",conf(hm_r)-counter(heatmap)*(conf(hm_w)+conf(hm_pad))+conf(hm_w)))

bezier_radius = 0r
bezier_radius_purity = 0.5
crest         = 0.25

#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
color         = black
#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

<rules>

<rule>
# this rule is part of variant #1
# to use it, set use=yes and also adjust radius above to 0.7r
use       = no
condition = var(chr1) eq var(chr2)
bezier_radius = 1r
radius    = 0.71r
flow      = continue
</rule>

#<rule>
#flow = continue
#condition = 1
#z = eval(remap_int(var(score),0,0.5,1,64)) 
#</rule>

<rule>
condition = var(score) < 0.1
hide = yes
</rule>

<rule>
flow = continue
condition = var(type) == 0  
color     = dgrey
thickness = 3
z = eval(remap_int(var(score),0,6,10,64))
</rule>

<rule>
flow = continue
condition = var(type) == 1  
#color     = dred
color     = eval(sprintf("white2blue-%d",remap_int(var(score),0.1,0.4,10,64)))
thickness = 4
z = eval(remap_int(var(score),0.1,0.4,10,64))
</rule>

<rule>
flow = continue
condition = var(type) == 2  
#color     = dblue
color     = eval(sprintf("white2green-%d",remap_int(var(score),0.1,2,10,64)))
thickness = 4
z = eval(remap_int(var(score),0.1,2,10,64)) 
</rule>

<rule>
flow = continue
condition = var(type) == 3  
#color     = dgreen
color     = eval(sprintf("white2red-%d",remap_int(var(score),0.2,7,10,64)))
thickness = 4
z = eval(remap_int(var(score),0.2,7,10,64))
</rule>

<rule>
flow = continue
condition = var(type) == 4  
color     = vdyellow
thickness = 2
z = eval(remap_int(var(score),0,6,10,64))
</rule>

<rule>
flow = continue
condition = var(type) == 5  
color     = vvdorange
thickness = 2
z = eval(remap_int(var(score),0,6,10,64))
</rule>

<rule>
flow = continue
condition = var(type) == 6  
color     = dpurple
thickness = 2
z = eval(remap_int(var(score),0,6,10,64))
</rule>


</rules>
</link>
</links>

<<include etc/colors_fonts_patterns.conf>>

restrict_parameter_names* = no
<<include etc/housekeeping.conf>>

<<include connectogram.colors.list.conf>>


